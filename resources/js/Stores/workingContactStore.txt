import { ContactsData } from '@/types'
import { defineStore } from 'pinia'
import { reactive, ref, toRefs } from 'vue'

interface ContactState {
  selectedContacts: string[]
  baseGroup: ContactsData
}

export const useContactStore = defineStore('contacts', () => {
  const state: ContactState = reactive({
    selectedContacts: ref([]),
    baseGroup: ref(),
  })

  const { ...reactiveState } = toRefs(state)

  function setBaseGroup(base: ContactsData) {
    state.baseGroup = base
  }

  function setSelectedContacts(contact: string) {
    state.selectedContacts.push(contact)
  }

  function expungeSelectedContacts(contact: string) {
    state.selectedContacts = state.selectedContacts.filter(activeId => activeId !== contact)
  }

  return { ...reactiveState, setSelectedContacts, expungeSelectedContacts, setBaseGroup }
})
