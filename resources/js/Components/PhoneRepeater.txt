<script setup>
import { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/vue';
import { computed } from 'vue';

const props = defineProps({
  modelValue: {
    type: [Array, String],
    default: () => [
      {
        number: '',
        type: 'mobile',
      },
    ],
  },
})

const emit = defineEmits(['update:modelValue'])

const phones = computed(() => props.modelValue)

function addPhone(phone) {
  phones.value.push({ number: '', type: phone })
  emitUpdatedPhones()
}

function removePhone(index) {
  phones.value.splice(index, 1)
  emitUpdatedPhones()
}

function emitUpdatedPhones() {
  const updatedPhones = [...phones.value]
  emit('update:modelValue', updatedPhones)
}
</script>

<template>
  <div
    v-for="(phone, idx) in phones"
    :key="idx"
    class="relative mb-4 space-y-2 group first-letter:uppercase"
  >
    <label class="col-span-2 text-sm font-medium text-gray-700 md:col-span-1 dark:text-gray-300">
      {{ phone.type }} phone
    </label>

    <input
      v-model="phone.number"
      x-mask:dynamic="
        $input.startsWith('(+265) 1')
          ? '(+999) 9 999 999' : '(+999) 999 999 999'
      "
      class="col-span-2 md:col-span-1 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-lime-600 focus:border-lime-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-lime-500 dark:focus:border-lime-500"
      placeholder="Enter phone number"
      type="text"
    >

    <button
      v-if="phones.length > 1" type="button"
      class="absolute hidden w-4 h-4 text-gray-300 group-hover:inline-flex top-9 right-3 hover:text-rose-500"
      @click="removePhone(idx)"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 stroke-current" viewBox="0 0 24 24" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
    </button>
  </div>

  <div>
    <Menu as="div" class="relative inline-flex">
      <MenuButton
        class="flex items-center gap-1 transition duration-300 dark:text-gray-200 hover:text-gray-500"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          viewBox="0 0 24 24" stroke-width="2"
          stroke="currentColor" fill="none"
          stroke-linecap="round" stroke-linejoin="round"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" />
          <path d="M5 12l14 0" />
        </svg>
        <span>Add phone</span>
      </MenuButton>

      <transition
        enter-active-class="transition duration-100 ease-out transform"
        enter-from-class="scale-90 opacity-0"
        enter-to-class="scale-100 opacity-100"
        leave-active-class="transition duration-100 ease-in transform"
        leave-from-class="scale-100 opacity-100"
        leave-to-class="scale-90 opacity-0"
      >
        <MenuItems class="absolute left-0 w-48 mt-2 overflow-hidden origin-top-left bg-white border rounded-md shadow-lg focus:outline-none">
          <MenuItem v-slot="{ active }" @click="addPhone('home')">
            <span :class="{ 'bg-gray-100': active }" class="block px-4 py-2 text-sm text-gray-700">Home</span>
          </MenuItem>

          <!-- <MenuItem v-slot="{ active, disabled }" disabled>
            <a href="#" :class="{ 'bg-gray-100': active, 'opacity-40': disabled }" class="block px-4 py-2 text-sm text-gray-700">Settings</a>
          </MenuItem> -->

          <MenuItem v-slot="{ active }" @click="addPhone('work')">
            <span :class="{ 'bg-gray-100': active }" class="block px-4 py-2 text-sm text-gray-700">Work</span>
          </MenuItem>

          <MenuItem v-slot="{ active }" @click="addPhone('mobile')">
            <span :class="{ 'bg-gray-100': active }" class="block px-4 py-2 text-sm text-gray-700">Mobile</span>
          </MenuItem>
        </MenuItems>
      </transition>
    </Menu>
  </div>
</template>
